$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: api
  trigger-interfaces:
    trigger-interface-1:
      triggers:
        createSCBNtoIV:
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          input-context:
            data: SCBNtoIV
          output-context:
            data: SCBNtoIV
      options:
        resources:
          - business-object: SCBNtoIV
            model:
              $ref: '#/models/SCBNtoIV'
            triggers:
              create: createSCBNtoIV
      type: api-trigger
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: request
      connector-type: http
      account-name: Account 1
      actions:
        INVOKE: {}
    action-interface-2:
      type: api-action
      business-object: request
      connector-type: http
      account-name: Account 1
      actions:
        INVOKE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - parse:
              name: CSV Parser Parse
              parse-format: csv
              source:
                template: '{{$Request.Payload}}'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
              sample-data: >-
                customer id,location id,item id,product class, quantity, uom,
                available from
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: array
                items:
                  type: object
                  properties:
                    customer id:
                      type: string
                    location id:
                      type: string
                    item id:
                      type: string
                    product class:
                      type: string
                    quantity:
                      type: string
                    uom:
                      type: string
                    available from:
                      type: string
                title: Parsed CSV
              options:
                csv-header: true
          - set-variable:
              name: Set variable 2
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      s4s-url:
                        type: string
                      s4s-credentials:
                        type: string
                mappings:
                  - variable:
                      mappings:
                        - s4s-credentials:
                            template: >-
                              {{$base64encode('qfsiylcmw61nyi1ya2ekrukwqbr2j1cv:lmmotqlyh6n43pc9vv3b8bnsevj459r9','utf8'
                              )}}
                        - s4s-url:
                            template: >-
                              https://s4s-supplement-service-prod.mybluemix.net/s4s/iv-token
          - custom-action:
              name: HTTP Invoke method
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              action: INVOKE
              map:
                customSchemas:
                  properties.`requestHeaders`:
                    type: object
                    properties:
                      Authorization:
                        type: string
                      Content-Type:
                        type: string
                mappings:
                  - continue2xx:
                      expression: 'true'
                  - method:
                      template: POST
                  - requestBody:
                      template: >-
                        {

                        "buyer_scbn_id": "{{$CSVParserParse[0]."customer
                        id"}}", 

                        "supplier_mailslot_id":"{{$Request.MSlotID}}",

                        "operation": "supplies",  

                        "force_token": "false"

                        }
                  - requestHeaders:
                      mappings:
                        - Authorization:
                            template: 'Basic {{$Setvariable2.variable."s4s-credentials"}}'
                        - Content-Type:
                            template: application/json
                  - url:
                      template: '{{$Setvariable2.variable."s4s-url"}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
          - logging:
              name: Log 2
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                mappings:
                  - customMessages:
                      mappings:
                        - request_object:
                            expression: '$HTTPInvokemethod '
                        - response_object:
                            expression: '$HTTPInvokemethodMetadata '
                  - logLevel:
                      template: Debug
                  - logMessage:
                      template: >-
                        S4S Token Service API Call Successful. API Response Code
                        : {{$HTTPInvokemethodMetadata."status-code"}}
                customSchemas:
                  properties.`customMessages`:
                    type: object
                    properties:
                      request_object:
                        type: object
                        properties: {}
                      response_object:
                        type: object
                        properties: {}
          - if:
              name: If
              input:
                - variable: Request
                  $ref: '#/trigger/payload'
                - variable: CSVParserParse
                  $ref: '#/node-output/CSV Parser Parse/response/payload'
                - variable: Setvariable2
                  $ref: '#/node-output/Set variable 2/response/payload'
                - variable: HTTPInvokemethod
                  $ref: '#/node-output/HTTP Invoke method/response/payload'
                - variable: HTTPInvokemethodMetadata
                  $ref: '#/node-output/HTTP Invoke method/response'
              branch:
                - condition:
                    '{{$HTTPInvokemethodMetadata."status-code"}}': '200'
                  execute: []
              else:
                execute: []
                completion-action:
                  terminate:
                    error:
                      input:
                        - variable: Request
                          $ref: '#/trigger/payload'
                        - variable: CSVParserParse
                          $ref: '#/node-output/CSV Parser Parse/response/payload'
                        - variable: Setvariable2
                          $ref: '#/node-output/Set variable 2/response/payload'
                        - variable: HTTPInvokemethod
                          $ref: '#/node-output/HTTP Invoke method/response/payload'
                        - variable: HTTPInvokemethodMetadata
                          $ref: '#/node-output/HTTP Invoke method/response'
                      message: >-
                        "S4S Service Failed with the Error:  S4S Token Service
                        Url:{{$Setvariable2.variable."s4s-url"}}  for the Buyer
                        SCBN ID:{{$CSVParserParse[0]."customer id"}}  and
                        Supplier Mail Slot ID :{{$Request.MSlotID}}  
                        ({{$HTTPInvokemethod.responseBody}})
                      status-code: 400
              output-schema: {}
          - parse:
              name: JSON Parser Parse 2
              parse-format: json
              source:
                template: '{{$HTTPInvokemethod.responseBody}}'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
              sample-data: |-
                {
                    "buyer_scbn_id": "scbn_3",
                    "supplier_id": "KC",
                    "iv_tenant_id": "us-0ca9dc72",
                    "bearer_token": "MfD83gYia4Kchqv0oOdXfZ0Vie7iKZpU",
                    "time_to_live": 43170,
                    "url": "https://s4s-supplement-service-dev.mybluemix.net/s4s/us-0ca9dc72/suppliers/KC/supplies",
                    "http_method": "PUT",
                    "auth_header": "Basic OWtnanl2d2ZpM2o1YTlvMnI2aGd6dDh1NnUzdmk5cjc6cmZtdWRsOTQ1aG54ZzFudXR1Z3RpZWkwZWE2N29sdmw="
                }
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  buyer_scbn_id:
                    type: string
                  supplier_id:
                    type: string
                  iv_tenant_id:
                    type: string
                  bearer_token:
                    type: string
                  time_to_live:
                    type: number
                  url:
                    type: string
                  http_method:
                    type: string
                  auth_header:
                    type: string
                title: Parsed JSON
          - if:
              name: If 5
              input:
                - variable: Request
                  $ref: '#/trigger/payload'
                - variable: CSVParserParse
                  $ref: '#/node-output/CSV Parser Parse/response/payload'
                - variable: Setvariable2
                  $ref: '#/node-output/Set variable 2/response/payload'
                - variable: HTTPInvokemethod
                  $ref: '#/node-output/HTTP Invoke method/response/payload'
                - variable: HTTPInvokemethodMetadata
                  $ref: '#/node-output/HTTP Invoke method/response'
                - variable: JSONParserParse2
                  $ref: '#/node-output/JSON Parser Parse 2/response/payload'
              branch:
                - condition:
                    '{{$JSONParserParse2.supplier_id}}':
                      neq: ''
                  execute: []
              else:
                execute: []
                completion-action:
                  terminate:
                    error:
                      input:
                        - variable: Request
                          $ref: '#/trigger/payload'
                        - variable: CSVParserParse
                          $ref: '#/node-output/CSV Parser Parse/response/payload'
                        - variable: Setvariable2
                          $ref: '#/node-output/Set variable 2/response/payload'
                        - variable: HTTPInvokemethod
                          $ref: '#/node-output/HTTP Invoke method/response/payload'
                        - variable: HTTPInvokemethodMetadata
                          $ref: '#/node-output/HTTP Invoke method/response'
                        - variable: JSONParserParse2
                          $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                      message: >-
                        ' "Supplier ID not returned from S4S Token service
                        ({{$Setvariable2.variable."s4s-url"}} ) for the Buyer
                        SCBN ID:{{$CSVParserParse[0]."customer id"}}  and
                        Supplier Mail Slot:{{$Request.MSlotID}}  "' 
                      status-code: 400
              output-schema: {}
          - set-variable:
              name: Set variable
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      csvarray:
                        type: array
                        items:
                          type: object
                          properties:
                            itemId:
                              type: string
                            lineReference:
                              type: string
                            productClass:
                              type: string
                            quantity:
                              type: string
                            reference:
                              type: string
                            referenceType:
                              type: string
                            segment:
                              type: string
                            segmentType:
                              type: string
                            shipByDate:
                              type: string
                            shipNode:
                              type: string
                            tagNumber:
                              type: string
                            type:
                              type: string
                            unitOfMeasure:
                              type: string
                            eta:
                              type: string
                mappings:
                  - variable:
                      mappings:
                        - csvarray:
                            foreach:
                              input: '$CSVParserParse '
                              iterator: csvarrayItem
                              mappings:
                                - eta:
                                    template: >-
                                      {{$toMillis($csvarrayItem."available from"
                                      )<$toMillis($now() ) ?
                                      "1900-01-01T00:00:00Z" :
                                      $csvarrayItem."available from" }}
                                - itemId:
                                    template: >-
                                      {{$JSONParserParse2.supplier_id}}::{{$csvarrayItem."item
                                      id"}}
                                - productClass:
                                    template: NEW
                                - quantity:
                                    template: '{{$csvarrayItem.quantity}}'
                                - shipByDate:
                                    template: '2500-01-01T00:00:00Z'
                                - shipNode:
                                    template: >-
                                      {{$JSONParserParse2.supplier_id}}::{{$csvarrayItem."location
                                      id"}}
                                - type:
                                    template: >-
                                      {{$toMillis($csvarrayItem."available from"
                                      )>$toMillis($now() ) ? "INTRANSIT" :
                                      "ONHAND"}}
                                - unitOfMeasure:
                                    template: UNIT
          - custom-action:
              name: HTTP Invoke method 2
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              action: INVOKE
              map:
                customSchemas:
                  properties.`requestHeaders`:
                    type: object
                    properties:
                      Authorization:
                        type: string
                      Content-Type:
                        type: string
                mappings:
                  - continue2xx:
                      expression: 'true'
                  - method:
                      template: '{{$JSONParserParse2.http_method}}'
                  - requestBody:
                      template: "{\n\t\"supplies\": {{$Setvariable.variable.csvarray}}\n}"
                  - requestHeaders:
                      mappings:
                        - Authorization:
                            template: '{{$JSONParserParse2.auth_header}}'
                        - Content-Type:
                            template: application/json
                  - url:
                      template: '{{$JSONParserParse2.url}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
          - logging:
              name: Log
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                mappings:
                  - customMessages:
                      mappings:
                        - request_object:
                            expression: '$HTTPInvokemethod2 '
                        - response_object:
                            expression: '$HTTPInvokemethodMetadata '
                  - logLevel:
                      template: Debug
                  - logMessage:
                      template: >-
                        S4S Sync Supply Call Successful. API Response Code :
                        {{$HTTPInvokemethod2Metadata."status-code"}}
                customSchemas:
                  properties.`customMessages`:
                    type: object
                    properties:
                      request_object:
                        type: object
                        properties: {}
                      response_object:
                        type: object
                        properties: {}
          - if:
              name: If 2
              input:
                - variable: Request
                  $ref: '#/trigger/payload'
                - variable: CSVParserParse
                  $ref: '#/node-output/CSV Parser Parse/response/payload'
                - variable: Setvariable2
                  $ref: '#/node-output/Set variable 2/response/payload'
                - variable: HTTPInvokemethod
                  $ref: '#/node-output/HTTP Invoke method/response/payload'
                - variable: HTTPInvokemethodMetadata
                  $ref: '#/node-output/HTTP Invoke method/response'
                - variable: JSONParserParse2
                  $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                - variable: Setvariable
                  $ref: '#/node-output/Set variable/response/payload'
                - variable: HTTPInvokemethod2
                  $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                - variable: HTTPInvokemethod2Metadata
                  $ref: '#/node-output/HTTP Invoke method 2/response'
              branch:
                - condition:
                    '{{$HTTPInvokemethod2Metadata."status-code"}}': '200'
                  execute: []
              else:
                execute: []
                completion-action:
                  terminate:
                    error:
                      input:
                        - variable: Request
                          $ref: '#/trigger/payload'
                        - variable: CSVParserParse
                          $ref: '#/node-output/CSV Parser Parse/response/payload'
                        - variable: Setvariable2
                          $ref: '#/node-output/Set variable 2/response/payload'
                        - variable: HTTPInvokemethod
                          $ref: '#/node-output/HTTP Invoke method/response/payload'
                        - variable: HTTPInvokemethodMetadata
                          $ref: '#/node-output/HTTP Invoke method/response'
                        - variable: JSONParserParse2
                          $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                        - variable: Setvariable
                          $ref: '#/node-output/Set variable/response/payload'
                        - variable: HTTPInvokemethod2
                          $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                        - variable: HTTPInvokemethod2Metadata
                          $ref: '#/node-output/HTTP Invoke method 2/response'
                      message: >-
                        '"S4S Sync Supply Failed With Error":  
                        {{$HTTPInvokemethod2.responseBody}}. S4S URL:
                        {{$JSONParserParse2.url}} '
                      status-code: 400
              output-schema: {}
          - logging:
              name: Log 3
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Request
                    $ref: '#/trigger/payload'
                  - variable: CSVParserParse
                    $ref: '#/node-output/CSV Parser Parse/response/payload'
                  - variable: Setvariable2
                    $ref: '#/node-output/Set variable 2/response/payload'
                  - variable: HTTPInvokemethod
                    $ref: '#/node-output/HTTP Invoke method/response/payload'
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: HTTPInvokemethod2
                    $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                  - variable: HTTPInvokemethod2Metadata
                    $ref: '#/node-output/HTTP Invoke method 2/response'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        Response just before responding to SCBN call. S4S Sync
                        Supply Called successfully for the Buyer SCBN
                        ID:{{$CSVParserParse[0]."customer id"}} , Mail Slot
                        ID:{{$Request.MSlotID}} and Supplier
                        ID:{{$JSONParserParse2.supplier_id}}", S4S Token Serivce
                        URL:{{$Setvariable2.variable."s4s-url"}}, S4S Sync
                        Supply URL: {{$JSONParserParse2.url}}
          - response:
              name: response-1
              reply-maps:
                - title: SCBNtoIV successfully created
                  status-code: '200'
                  map:
                    $map: 'http://ibm.com/appconnect/map/v1'
                    input:
                      - variable: Request
                        $ref: '#/trigger/payload'
                      - variable: CSVParserParse
                        $ref: '#/node-output/CSV Parser Parse/response/payload'
                      - variable: Setvariable2
                        $ref: '#/node-output/Set variable 2/response/payload'
                      - variable: HTTPInvokemethod
                        $ref: '#/node-output/HTTP Invoke method/response/payload'
                      - variable: HTTPInvokemethodMetadata
                        $ref: '#/node-output/HTTP Invoke method/response'
                      - variable: JSONParserParse2
                        $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                      - variable: Setvariable
                        $ref: '#/node-output/Set variable/response/payload'
                      - variable: HTTPInvokemethod2
                        $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                      - variable: HTTPInvokemethod2Metadata
                        $ref: '#/node-output/HTTP Invoke method 2/response'
                    mappings:
                      - MSlotID:
                          template: '{{$Request.MSlotID}}'
                      - Payload:
                          template: '"Sync Supply  called Successfully"'
                  input:
                    - variable: Request
                      $ref: '#/trigger/payload'
                    - variable: CSVParserParse
                      $ref: '#/node-output/CSV Parser Parse/response/payload'
                    - variable: Setvariable2
                      $ref: '#/node-output/Set variable 2/response/payload'
                    - variable: HTTPInvokemethod
                      $ref: '#/node-output/HTTP Invoke method/response/payload'
                    - variable: HTTPInvokemethodMetadata
                      $ref: '#/node-output/HTTP Invoke method/response'
                    - variable: JSONParserParse2
                      $ref: '#/node-output/JSON Parser Parse 2/response/payload'
                    - variable: Setvariable
                      $ref: '#/node-output/Set variable/response/payload'
                    - variable: HTTPInvokemethod2
                      $ref: '#/node-output/HTTP Invoke method 2/response/payload'
                    - variable: HTTPInvokemethod2Metadata
                      $ref: '#/node-output/HTTP Invoke method 2/response'
  name: Covid-SCBN-IV
models:
  SCBNtoIV:
    name: SCBNtoIV
    properties:
      MSlotID:
        required: false
        id: true
        type: string
      Payload:
        required: false
        id: false
        type: string
    plural: SCBNtoIV
    description: ' '
    operations:
      create: '#/integration/assemblies/assembly-1'
